package com.aws.managers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper;
import com.aws.factory.AWSClientFactory;

@Component
public class AWSManager {
	
	@Autowired
	private AWSClientFactory clientFactory;
	public DynamoDBMapper mapper =null; 
	
	public void initiablizeDynamoDbMapper(){
		this.mapper = new DynamoDBMapper(clientFactory.initializeClient());
	}
	public void createTable( String tableName) throws AmazonServiceException,AmazonClientException{
		System.out.println("Attempting to create table; please wait...");
		
		
		 List<AttributeDefinition> attributeDefinitions = new ArrayList<AttributeDefinition>();
         attributeDefinitions.add(new AttributeDefinition().withAttributeName("EMP_ID").withAttributeType("N"));

         List<KeySchemaElement> keySchema = new ArrayList<KeySchemaElement>();
         keySchema.add(new KeySchemaElement().withAttributeName("EMP_ID").withKeyType(KeyType.HASH)); // Partition
                                                                                                  // key

         CreateTableRequest createTableRequest = new CreateTableRequest().withTableName(tableName).withKeySchema(keySchema)
             .withAttributeDefinitions(attributeDefinitions).withProvisionedThroughput(
                 new ProvisionedThroughput().withReadCapacityUnits(5L).withWriteCapacityUnits(6L));


        CreateTableResult table = clientFactory.initializeClient().createTable(createTableRequest ); // Sort key
        
           
        
        System.out.println("Success.  Table status: " +table.getTableDescription().getTableStatus());
	}
	
	
	public void AddEmployee(Employee employee) throws AmazonServiceException,AmazonClientException{
		System.out.println("Attempting to insert Employee record"+employee);
		Employee ifExistingEmployee=mapper.load(Employee.class,employee.getEmpID());
		if(null ==ifExistingEmployee ){
		mapper.save(employee);
		System.out.println("Insertion successful");
		}
		else{
			System.out.println("Employee with ID:"+employee.getEmpID()+" Already Exists");
		}
	
		
	}
	public Employee readEmployee(int Emp_ID) throws AmazonServiceException,AmazonClientException{
		System.out.println("Reading empoyee with ID: "+Emp_ID);
		Employee employee=mapper.load(Employee.class,Emp_ID);
		
		return employee;
	}
	public Employee UpdateEmployee(Employee employee) throws AmazonServiceException,AmazonClientException{
		mapper.save(employee);
//		 DynamoDBMapperConfig config = new DynamoDBMapperConfig(DynamoDBMapperConfig.ConsistentReads.CONSISTENT);
//		 Employee updatedEmployee =mapper.load(Employee.class,employee.getEmpID(),config);
		 Employee updatedEmployee=mapper.load(Employee.class,employee.getEmpID());
		return updatedEmployee;
	}
	public void DeleteEmployee(Employee employee) throws AmazonServiceException,AmazonClientException{
		mapper.delete(employee);
		 DynamoDBMapperConfig config = new DynamoDBMapperConfig(DynamoDBMapperConfig.ConsistentReads.CONSISTENT);
		 Employee deletedEmployee =mapper.load(Employee.class,employee.getEmpID(),config);
        if (deletedEmployee == null) {
            System.out.println("Done - Sample item is deleted.");
        }
		
	}
	
	

}
